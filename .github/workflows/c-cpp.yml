name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

# --- Compilation stages ---
  compile-gcc:
    name: Compile gcc ${{ matrix.gcc_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        gcc_version: ['7','8','9','10']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install gcc-${{ matrix.gcc_version }}
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt-get install -y gcc-${{ matrix.gcc_version }}
    - name: Compile
      run: make libs
      env:
        CC: gcc-${{ matrix.gcc_version }}
        
  compile-clang:
    name: Compile clang ${{ matrix.clang_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        clang_version: ['7','8','9','10']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install clang-${{ matrix.clang_version }}
      run: |
        sudo apt-get install -y clang-${{ matrix.clang_version }}
    - name: Compile
      run: make libs
      env:
        CC: clang-${{ matrix.clang_version }}
        CXX: clang++-${{ matrix.clang_version }}
        
# --- Style check stages ---
  style:
    name: Stylechecker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install recent uncrustify
      run: |
        git clone https://github.com/uncrustify/uncrustify.git
        cd uncrustify && mkdir build && cd build
        cmake .. && sudo make install && cd ../..
    - name: Run uncrustify
      run: make ci_uncrustify

# --- Test stages ---
  test-gcc:
    name: Testing with gcc ${{ matrix.gcc_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        gcc_version: ['7','8','9','10']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install gcc-${{ matrix.gcc_version }} and other dependencies
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt-get install -y gcc-${{ matrix.gcc_version }} ruby rake gcc-multilib lcov
        pip install --user gcovr==3.3
    - name: Unit tests
      run: make utest
      env:
        CC: gcc-${{ matrix.gcc_version }}
  test-clang:
    name: Testing with clang ${{ matrix.clang_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        clang_version: ['7','8','9','10']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install clang-${{ matrix.clang_version }}
      run: |
        sudo apt-get install -y clang-${{ matrix.clang_version }} ruby rake gcc-multilib lcov
        pip install --user gcovr==3.3
        ln -fs /usr/bin/clang-${{ matrix.clang_version }} /usr/bin/clang
    - name: Unit tests
      run: make CC=clang utest
      env:
        CC: clang-${{ matrix.clang_version }}
        CXX: clang++-${{ matrix.clang_version }}

        
